'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'extraLongFactorials' function below.
 *
 * The function accepts INTEGER n as parameter.
 */

function extraLongFactorials(n) {
    int ar[101] = [0];
    ar[0] = 1;
 for (i = 0; i <= n; i++) {
 for (j = 0; j < leng; i++) {
     fact= i * ar[i] + count;
     fact[0].count;
     count=fact/10;
 }   
 while (count) {
     count=count/10;
     leng++;
     
 }   
 }    
    
var num = BigInt(n);

var factorial = 0;
if (num == 0 || num == 1) {
    return factorial;
} else {
    
    for (var i = num; i >= 0; i--) {
        factorial = factorial * i;
        var convert = BigInt(i);
        
        var fact = BigInt(factorial);
        fact = fact * convert;
    }
return fact;    
} 
    
    

}

function main() {
    const n = parseInt(readLine().trim(), 10);

    extraLongFactorials(n);
}
